
Criar a fonte de dados
Esta etapa cria uma fonte de dados por meio de um banco de dados usando o assistente de Configuração 
de Fonte de Dados (Visual Studio)

1. Para abrir a janela Fontes de Dados, use a pesquisa rápida (Ctrl+Q) e pesquise fontes de dados.

2. Na janela Fontes de Dados, selecione Adicionar Nova Fonte de Dados para iniciar o assistente de Configuração 
de Fonte de Dados.

3. Selecione Banco de Dados na página Escolher um Tipo de Fonte de Dados e, em seguida, clique em Avançar.

4. Na tela Escolher um Modelo de Banco de Dados , escolha Conjunto de Dados e clique em Avançar.

5. Na página Escolher Conexão de Dados , siga um destes procedimentos:
    5.1. Se uma conexão de dados com o banco de dados de exemplo (ALGUM BANCO CRIADO EM AULA) estiver disponível 
	na lista suspensa, selecione-o.
    5.2. Selecione Nova Conexão para inicializar a caixa de diálogo Adicionar/Modificar Conexão.

6. Na página Salvar cadeia de conexão na página de arquivo configuração do aplicativo , clique em Avançar.

7. Na página Escolher objetos de banco de dados, expanda o nó Tabelas .

8. Selecione a tabela DO BANCO CRIADO EM AULA e clique em Concluir.

O BANCO CRIADO EM AULA é adicionado ao seu projeto e a tabela SELECIONADA aparece na janela Fontes de Dados.

Conectando com BD manualmente - https://www.youtube.com/watch?v=H0ZcSyl0xws

0. SQL Server Management Studio - Ter uma base de dados criada

1. Visual Studio -> criar projeto Windows Form, renomear nome e titulo/texto

2. Visual Studio -> Tools -> Conect DataBase -> SPI01DT01\SQLEXPRESS (nome do servidor da máquina do professor)

3. No arquivo App.config -> adicionar string de conexão (Caso o arquivo não exista, criá-lo)
<connectionStrings>
    <add name="GlicemiaDBString"
        connectionString="Data Source=localhost\SQLEXPRESS;
        Initial Catalog=glicemia_db;
        TrustServerCertificate=True;
        Integrated security=True"/>
</connectionStrings>
  
==========
4. Visual Studio -> janela do NuGet, selecionar Browser -> digitar  Microsoft.Data.SqlClient -> confirmar instalação

5. No Form, adicionar ListView, renomear nome, na propriedade view setar para details

6. No ListView dentro do Form, com botão direito adicionar as colunas da tabela que será trazida

7. Criar um objeto string global no Form
private string conexaoString = ConfigurationManager.ConnectionStrings["GlicemiaDBString"].ConnectionString;

8. No fonte Form, adicionar duas bibliotecas
using System.Configuration;
using Microsoft.Data.SqlClient;  

9. No evento de Load do Form ou em evento de botão conectar

SqlConnection conexao = new SqlConnection(conexaoString);
conexao.Open();
string sqlTexto = "SELECT idMedidaGlicemia, valorGlicemia, dataMedida, idPaciente FROM MedidaGlicemia";
SqlCommand comando = new SqlCommand(sqlTexto, conexao);

listView_medidasGlicemias.Items.Clear();
SqlDataReader leitor = comando.ExecuteReader();
int i = 0;
while (leitor.Read())
{
    listView_medidasGlicemias.Items.Add(leitor["idMedidaGlicemia"].ToString());
    listView_medidasGlicemias.Items[i].SubItems.Add(leitor["valorGlicemia"].ToString());
    listView_medidasGlicemias.Items[i].SubItems.Add(leitor["dataMedida"].ToString());
    listView_medidasGlicemias.Items[i].SubItems.Add(leitor["idPaciente"].ToString());
    i++;
}


Conectando com BD manualmente - https://www.youtube.com/watch?v=H0ZcSyl0xws

CONTINUANDO DO SISTEMA ANTERIOR

INSERINDO NO BD
=======================
0. No Form, adicionar labels e textBox para:
idMedidaGlicemia
valorGlicemia
dataMedida
idPaciente

1. No Form, adicionar botão Cadastrar (renomear nome)

2. No evento de clique do botão, adicionar código:

SqlConnection conexao = new SqlConnection(conexaoString);
conexao.Open();
try
{
   //capturar valores das variáveis
   int idMedidaGlicemia = int.Parse(textBox_referente);
   int valorGlicemia = int.Parse(textBox_referente);
   string dataMedida = textBox_referente;
   int idPaciente = int.Parse(textBox_referente);

   //gerar sentenças SQL
   string sqlTexto = "INSERT INTO MedidaGlicemia (idMedidaGlicemia, valorGlicemia, dataMedida, idPaciente) VALUES(@idMedidaGlicemia, @valorGlicemia, @dataMedida, @idPaciente)";
   SqlCommand comando = new SqlCommand(sqlTexto, conexao);
   comando.Parameters.AddWithValue("@idMedidaGlicemia",idMedidaGlicemia);
   comando.Parameters.AddWithValue("@valorGlicemia",valorGlicemia);
   comando.Parameters.AddWithValue("@dataMedida",dataMedida);
   comando.Parameters.AddWithValue("@idPaciente",idPaciente);

   //executar sentença SQL
   comando.ExecuteNonQuery();     
}
catch (Exception e)
{
}

conexao.Close();   

//recarregar ListView
carregarListView(); 


REMOVENDO NO BD
=======================
3. No Form, adicionar botão Remover (renomear nome)

4. No evento de clique do botão, adicionar código:
//lembre que o remover está relacionado com ListView e a região
//selecionada

SqlConnection conexao = new SqlConnection(conexaoString);
conexao.Open();
try 
{
   //MessageBox.Show(listView_medidasGlicemias.SelectedItems[0].Text);
   int idMedidaGlicemia = int.Parse(listView_medidasGlicemias.SelectedItems[0].Text);
   
   //gerar sentenças SQL
   string sqlTexto = "DELETE FROM MedidaGlicemia WHERE idMedidaGlicemia = @idMedidaGlicemia";

   SqlCommand comando = new SqlCommand(sqlTexto, conexao);
   comando.Parameters.AddWithValue("@idMedidaGlicemia",idMedidaGlicemia);

   //executar sentença SQL
   comando.ExecuteNonQuery();     
}
catch (Exception e)
{
}

conexao.Close();

//recarregar ListView
carregarListView(); 

conexao.Close();